//Day 1 of 50 Days Challenge



268. Missing Number

class Solution {
public:
    int missingNumber(vector<int>& nums) {
        int n=nums.size();
        return n*(n+1)*0.5 - accumulate(nums.begin(),nums.end(),0);
    }
};



206. Reverse Linked List

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
       ListNode* curr=head;
       ListNode* prev=NULL;
       ListNode* nextNode; 

       while(curr!=NULL){

        nextNode=curr->next;
        curr->next=prev;
        prev=curr;
        curr=nextNode;
       }

       return prev;
    }
};
