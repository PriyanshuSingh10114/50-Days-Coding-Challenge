//Day 5 of 50-Days-Coding-Challemge

234. Palindrome Linked List

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */

class Solution {
    bool checkPallindrome(vector<int> arr) {
        int n = arr.size();
        int start = 0;
        int end = n - 1;

        while (start <= end) {
            if (arr[start] != arr[end]) {
                return 0;
            }
            start++;
            end--;
        }
        return 1;
    }

public:
    bool isPalindrome(ListNode* head) {

        vector<int> arr;
        ListNode* temp = head;

        while (temp != NULL) {
            arr.push_back(temp->val);
            temp = temp->next;
        }
        return checkPallindrome(arr);
    }
};




367. Valid Perfect Square

class Solution {
public:
    bool isPerfectSquare(int num) {
        if(num==0){
            return true;
        }

        int odd=1;
        while(num>0){
            num=num-odd;
            odd=odd+2;
        }
        return num==0;
    }
};
